//Bibliotecas declaradas
#define BLYNK_PRINT Serial
#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>
#include <IRsend.h>


char auth[] = "PE2z8xqwiEcXlGhB9fp6XilXPSGN96Uh"; //token gerado pelo Blynk
char ssid[] = "MULTILASER_SL";
char pass[] = "aguasclaras";

IRsend irsend1(4); //led emissor IR conectado ao pino (D5)
uint16_t tamanho1 = 197; //TAMANHO DA LINHA RAW(197 BLOCOS)
uint16_t frequencia1 = 38; //FREQUÊNCIA DO SINAL IR(32KHz)
uint16_t raw1Data[] = { 6088, 7360, 564, 1632, 572, 1624, 572, 1624, 568, 1628, 564, 1632, 572, 1624, 572, 1624, 568, 1628, 568, 556, 564, 560, 564, 584, 540, 580, 564, 560, 560, 560, 564, 584, 540, 584, 540, 1624, 568, 1628, 564, 1632, 572, 1648, 548, 1624, 568, 1624, 568, 1628, 568, 1628, 564, 584, 540, 584, 572, 552, 560, 584, 536, 588, 536, 584, 560, 560, 564, 584, 540, 1628, 564, 1628, 568, 1628, 564, 1632, 572, 1620, 572, 1624, 572, 1624, 568, 1624, 568, 580, 544, 580, 564, 556, 568, 552, 572, 576, 544, 576, 568, 556, 568, 580, 544, 1620, 572, 576, 536, 1628, 568, 584, 568, 552, 572, 576, 536, 584, 540, 1628, 584, 564, 572, 1620, 564, 556, 564, 1628, 568, 1628, 564, 1628, 564, 1628, 568, 580, 540, 1652, 564, 560, 564, 556, 568, 1624, 568, 1624, 568, 584, 540, 1624, 592, 1624, 568, 556, 568, 1624, 568, 1624, 568, 580, 544, 576, 568, 1624, 568, 556, 568, 552, 560, 584, 540, 1628, 588, 556, 568, 1624, 568, 556, 568, 1620, 572, 576, 568, 556, 568, 1620, 572, 576, 536, 1628, 568, 580, 540, 1652, 564, 556, 568, 1624, 568, 1624, 568, 7376, 540 };

IRsend irsend2(4); //led emissor IR conectado ao pino (D5)
uint16_t tamanho2 = 197; //TAMANHO DA LINHA RAW(197 BLOCOS)
uint16_t frequencia2 = 38; //FREQUÊNCIA DO SINAL IR(32KHz)
uint16_t raw2Data[] = { 6116, 7372, 572, 1624, 560, 1628, 568, 1624, 564, 1628, 568, 1648, 536, 1684, 512, 1652, 556, 1636, 560, 560, 564, 580, 544, 576, 560, 560, 564, 580, 544, 576, 560, 560, 564, 580, 544, 1644, 540, 1652, 568, 1620, 564, 1628, 568, 1624, 564, 1652, 532, 1656, 560, 1632, 564, 556, 560, 584, 540, 580, 564, 556, 560, 584, 540, 576, 568, 552, 564, 580, 544, 1644, 560, 1632, 564, 1624, 564, 1624, 572, 1644, 564, 1628, 568, 1620, 564, 1628, 556, 588, 540, 576, 568, 552, 560, 584, 540, 580, 568, 576, 536, 584, 564, 552, 572, 1616, 568, 1648, 540, 1648, 568, 552, 560, 584, 540, 580, 568, 548, 564, 1624, 564, 580, 564, 556, 568, 576, 540, 1648, 568, 1620, 564, 1624, 564, 1656, 528, 584, 560, 1628, 568, 576, 540, 580, 564, 1624, 564, 1624, 560, 584, 560, 1628, 572, 1616, 568, 576, 536, 1652, 568, 1620, 564, 580, 536, 584, 560, 1628, 568, 576, 536, 580, 568, 552, 560, 1652, 536, 584, 560, 1624, 560, 584, 564, 1624, 560, 560, 564, 580, 556, 1628, 568, 552, 564, 1648, 536, 584, 560, 1628, 560, 580, 564, 1624, 560, 1628, 572, 7380, 560 };

BLYNK_WRITE(V1){
 int onoff = param.asInt();
 if(onoff == 1){
 irsend1.sendRaw(raw1Data,tamanho1,frequencia1);
}
}
BLYNK_WRITE(V2){
 int onoff = param.asInt();
 if(onoff == 1){
 irsend2.sendRaw(raw2Data,tamanho2,frequencia2);
}
}

void setup()
{
 irsend1.begin();
 irsend2.begin();
 Serial.begin(115200);
 Blynk.begin(auth, ssid, pass);
 pinMode(13, OUTPUT);
  pinMode(25, OUTPUT);
  pinMode(33, OUTPUT);
  pinMode(26, OUTPUT);
  pinMode(14, OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(32, OUTPUT);
}
BLYNK_CONNECTED(){
 Blynk.syncVirtual(V1);
 Blynk.syncVirtual(V2);

}

void loop() {
 Blynk.run();
 delay(50);
  
}
